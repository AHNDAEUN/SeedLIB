<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.seed.lib.book.shelf.BookShelfMapper">

	<select id="getBookTitle" parameterType="BookVO" resultType="String">
		select TITLE from book b where ISBN = #{isbn}
	</select>

	<select id="getShelfExist" parameterType="BookShelfVO" resultType="Integer">
		SELECT COUNT(SHNUM) FROM SHELF WHERE USERNAME = 'bb'
	</select>
	
	<select id="getSameShelf" parameterType="BookShelfVO" resultType="Integer">
		SELECT COUNT(SHNUM) FROM SHELF WHERE USERNAME = 'bb' AND SHNAME = #{shName}
	</select>
	
	<select id="getBookExist" parameterType="BookPickVO" resultType="Integer">
		SELECT COUNT(PICKNUM) FROM PICK WHERE ISBN = #{isbn} AND SHNUM = #{shNum}
	</select>
	
	<select id="getShelfList" parameterType="BookShelfVO" resultType="BookShelfVO">
		SELECT * FROM SHELF WHERE USERNAME = #{userName}
	</select>
	
	<select id="getShelfListP" parameterType="ShelfPager" resultType="ShelfPager">
		SELECT SS.* FROM
			(SELECT ROWNUM R, S.*
				FROM SHELF S
				WHERE S.USERNAME = #{userName}
					AND S.SHNAME = #{shName}
					AND S.CREDATE BETWEEN #{creDateA} AND #{creDateB}
					ORDER BY
	    			<choose>
	    				<when test="select == 'name'">S.SHNAME</when>
	    				<otherwise>S.CREDATE</otherwise>
	    			</choose>
	    			<choose>
	    				<when test="sort == 'desc'">DESC</when>
	    				<otherwise>ASC</otherwise>
	    			</choose>
	    		)SS
	    WHERE R BETWEEN #{startRow} AND #{lastRow}
	</select>
	
	<insert id="setShelfAdd" parameterType="BookShelfVO">
		INSERT INTO SHELF(USERNAME, SHNAME, SHMEMO, CREDATE)
			VALUES (#{userName}, #{shName}, #{shMemo}, now());
	</insert>
	
	
	<delete id="setShelfDelete" parameterType="BookVO">
		delete from shelf
			where shName = #{shName} and username= #{userName}
	</delete>
	
	
	<update id="setShelfUpdate" parameterType="BookShelfVO">
		UPDATE SHELF
			SET SHNAME = #{shName} AND SHMEMO = #{shMemo}
		WHERE SHNUM = #{shNum}
	</update>
	
	
	<insert id="setBookAdd" parameterType="BookPickVO">
		INSERT INTO PICK(ISBN, SHNUM, REGDATE)
			VALUES (#{isbn}, #{shNum}, now());
	</insert>
	
	
	<delete id="setBookDelete" parameterType="BookPickVO">
		DELETE FROM PICK
			WHERE ISBN = #{isbn} ANS SHNUM = #{shNum}
	</delete>
	
	
	<select id="getBookList" parameterType="ShelfBookPager" resultMap="getBookList">
		SELECT BB.* FROM
			(SELECT ROWNUM R, BB.* FROM
				(S.*, P.*, B.*
					FROM SHELF S
					INNER JOIN PICK P
					ON S.SHNUM = P.SHNUM
				
					INNER JOIN BOOK B
					ON P.ISBN = B.ISBN
				
					WHERE S.SHNUM = #{shNum}
						AND B.TITLE = #{title}
						AND B.ISBN = #{isbn}
						AND P.REGDATE BETWEEN #{regDateA} AND #{regDateB}
					ORDER BY
	    			<choose>
	    				<when test="select == 'title'">B.TITLE</when>
	    				<when test="select == 'isbn'">B.ISBN</when>
	    				<otherwise>P.REGDATE</otherwise>
	    			</choose>
	    			<choose>
	    				<when test="sort == 'desc'">DESC</when>
	    				<otherwise>ASC</otherwise>
	    			</choose>
	    		)BB
	    	)BB
	    WHERE R BETWEEN #{startRow} AND #{lastRow}
	</select>
	
	<resultMap type="BookVO" id="getBookList">
		<id column="isbn" property="isbn"/>
			<result column="title" property="title"/>
			<result column="writer" property="writer"/>
		<association property="bookPickVOs" javaType="BookPickVO">
			<id column="pickNum" property="pickNum"/>
		</association>
		<collection property="bookShelfVOs" javaType="List" ofType="BookShelfVO">
			<id column="shNum" property="shNum"/>
			<result column="shName" property="shName"/>
			<result column="shMemo" property="shMemo"/>
			<result column="userName" property="userName"/>
			<result column="creDate" property="creDate"/>
		</collection>
			
		
	</resultMap>
	
	
	<select id="getShelfCount" resultType="Long" parameterType="ShelfPager">
    	SELECT COUNT(SHNUM) FROM SHELF WHERE USERNAME = #{userName}
	</select>
	
	
	<select id="getBookCount" resultType="Long" parameterType="ShelfPager">
    	SELECT COUNT(PICKNUM) FROM PICK WHERE SHNUM = #{shNum}
	</select>
</mapper>